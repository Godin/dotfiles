[user]
  useConfigOnly = true

[advice]
  statusHints = false

[core]
  excludesfile = ~/.gitignore
  editor = emacsclient --tty --alternate-editor=\"\"

[pager]
  diff = diff-highlight | less -R
  show = diff-highlight | less -R

[status]
  showUntrackedFiles = all

[commit]
  template = ~/.git-commit-template

[push]
  useForceIfIncludes = true
  # 'git push' will push the current branch to its tracking branch
  # the usual default is to push all branches
  default = tracking

[rebase]
  autostash = true
  updateRefs = true

[rerere]
  # http://git-scm.com/book/en/v2/Git-Tools-Rerere
  enabled = true

[stash]
  # 'git stash show' = 'git stash show -p'
  showPatch = true
  showStat = false

[branch]
  autosetuprebase = always

[branch "master"]
  rebase = true

[color]
  ui = true

[diff]
  colorMoved = dimmed-zebra

  # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
  # instead of a/b/c/d as prefixes for patches
  mnemonicprefix = true

  # Detect renames and copies
  renames = copies

  # Better detection of words
  wordRegex = .

[init]
  defaultBranch = main

[private-build]
  command = mvn install

[alias]
  st = status
  ci = commit -v
  co = checkout
  br = branch --sort=-committerdate --format='%(HEAD)%(if)%(HEAD)%(then)%(color:yellow)%(end) %(align:50)%(refname:short)%(end) %(align:15)%(committerdate:relative)%(end) %(contents:subject) %(if:equals=refs/heads)%(refname:rstrip=-2)%(then)%(color:red)%(if)%(upstream)%(then)%(upstream:track)%(else)[unset]%(end)%(end)'

  rbi = "!g() { git rebase -i ${1:-master} ; } ; g"
  fp = push --force-with-lease

  publish = "!f() { git push --set-upstream ${1:-origin} $(git branch --show-current); }; f"

  up = !git-up

  ls-ignored = ls-files --exclude-standard --ignored --others

  ca = !git commit --amend --date=\"$(date -R)\"

  # change author of commit
  credit = "!f() { git commit --amend --author \"$1\" --reuse-message=HEAD; }; f"

  # stage
  sf = stage -u

  # diff
  dc = diff --cached
  wd = diff --word-diff=color
  wdc = diff --word-diff=color --staged

  # log
  l = log --oneline
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  changes = log --pretty=format:'%Cred%h%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative --name-status
  out = log @{u}..

  # reset
  unstage = reset HEAD

[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
